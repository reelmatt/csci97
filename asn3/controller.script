#
########################################
# Store Controller Service Sample Script
########################################

# Store Commands
# define  store  <identifier> name <name> address <address>
define  store  store_123 name RelianceMart  address  ahmedabad

#Aisle Commands
# Define an aisle within the store
# define  aisle  <store_id>:<aisle_number>  name  <name>  description  <description> location  (floor  |  stock_room)
define  aisle  store_123:aisle_A1  name  AISLE_A1  description  AISLE_A1_desc location  stock_room
define  aisle  store_123:aisle_A2  name  AISLE_A2  description  AISLE_A2_desc location  floor
define  aisle  store_123:aisle_A3  name  AISLE_A3  description  AISLE_A3_desc location  floor
define  aisle  store_123:aisle_B1  name  AISLE_B1  description  AISLE_B1_desc location  stock_room
define  aisle  store_123:aisle_B2  name  AISLE_B2  description  AISLE_B2_desc location  floor
define  aisle  store_123:aisle_B3  name  AISLE_B3  description  AISLE_B3_desc location  floor

#Shelf Commands
# Define a new shelf within the store
# define  shelf  <store_id>:<aisle_number>:<shelf_id>  name  <name>  level  (high  | medium  |  low)  description  <description>  [temperature  (frozen  |  refrigerated  | ambient  |  warm  |  hot  )]
define  shelf  store_123:aisle_A1:shelf_q1  name  Shelf_Q1  level  high   description  Shelf_Q1_Desc  temperature  frozen
define  shelf  store_123:aisle_A1:shelf_q2  name  Shelf_Q2  level  medium   description  Shelf_Q2_Desc  temperature  ambient
define  shelf  store_123:aisle_A1:shelf_q3  name  Shelf_Q3  level  low   description  Shelf_Q3_Desc  temperature  refrigerated
define  shelf  store_123:aisle_A1:shelf_q4  name  Shelf_Q4  level  low   description  Shelf_Q4_Desc  temperature  warm
define  shelf  store_123:aisle_A1:shelf_q5  name  Shelf_Q5  level  medium   description  Shelf_Q5_Desc  temperature  hot


define  shelf  store_123:aisle_A2:shelf_q1  name  Shelf_Q1  level  high   description  Shelf_Q1_Desc  temperature  frozen
define  shelf  store_123:aisle_A2:shelf_q2  name  Shelf_Q2  level  medium   description  Shelf_Q2_Desc  temperature  ambient
define  shelf  store_123:aisle_A2:shelf_q3  name  Shelf_Q3  level  low   description  Shelf_Q3_Desc  temperature  refrigerated
define  shelf  store_123:aisle_A2:shelf_q4  name  Shelf_Q4  level  low   description  Shelf_Q4_Desc  temperature  warm
define  shelf  store_123:aisle_A2:shelf_q5  name  Shelf_Q5  level  medium   description  Shelf_Q5_Desc  temperature  hot


define  shelf  store_123:aisle_A3:shelf_q1  name  Shelf_Q1  level  high   description  Shelf_Q1_Desc  temperature  frozen
define  shelf  store_123:aisle_A3:shelf_q2  name  Shelf_Q2  level  medium   description  Shelf_Q2_Desc  temperature  ambient
define  shelf  store_123:aisle_A3:shelf_q3  name  Shelf_Q3  level  low   description  Shelf_Q3_Desc  temperature  refrigerated
define  shelf  store_123:aisle_A3:shelf_q4  name  Shelf_Q4  level  low   description  Shelf_Q4_Desc  temperature  warm
define  shelf  store_123:aisle_A3:shelf_q5  name  Shelf_Q5  level  medium   description  Shelf_Q5_Desc  temperature  hot


define  shelf  store_123:aisle_B1:shelf_q1  name  Shelf_Q1  level  high   description  Shelf_Q1_Desc  temperature  frozen
define  shelf  store_123:aisle_B1:shelf_q2  name  Shelf_Q2  level  medium   description  Shelf_Q2_Desc  temperature  ambient
define  shelf  store_123:aisle_B1:shelf_q3  name  Shelf_Q3  level  low   description  Shelf_Q3_Desc  temperature  refrigerated
define  shelf  store_123:aisle_B1:shelf_q4  name  Shelf_Q4  level  low   description  Shelf_Q4_Desc  temperature  warm
define  shelf  store_123:aisle_B1:shelf_q5  name  Shelf_Q5  level  medium   description  Shelf_Q5_Desc  temperature  hot


define  shelf  store_123:aisle_B2:shelf_q1  name  Shelf_Q1  level  high   description  Shelf_Q1_Desc  temperature  frozen
define  shelf  store_123:aisle_B2:shelf_q2  name  Shelf_Q2  level  medium   description  Shelf_Q2_Desc  temperature  ambient
define  shelf  store_123:aisle_B2:shelf_q3  name  Shelf_Q3  level  low   description  Shelf_Q3_Desc  temperature  refrigerated
define  shelf  store_123:aisle_B2:shelf_q4  name  Shelf_Q4  level  low   description  Shelf_Q4_Desc  temperature  warm
define  shelf  store_123:aisle_B2:shelf_q5  name  Shelf_Q5  level  medium   description  Shelf_Q5_Desc  temperature  hot


define  shelf  store_123:aisle_B3:shelf_q1  name  Shelf_Q1  level  high   description  Shelf_Q1_Desc  temperature  frozen
define  shelf  store_123:aisle_B3:shelf_q2  name  Shelf_Q2  level  medium   description  Shelf_Q2_Desc  temperature  ambient
define  shelf  store_123:aisle_B3:shelf_q3  name  Shelf_Q3  level  low   description  Shelf_Q3_Desc  temperature  refrigerated
define  shelf  store_123:aisle_B3:shelf_q4  name  Shelf_Q4  level  low   description  Shelf_Q4_Desc  temperature  warm
define  shelf  store_123:aisle_B3:shelf_q5  name  Shelf_Q5  level  medium   description  Shelf_Q5_Desc  temperature  hot


# Define a new product
# define  product  <product_id>        name  <name>  description  <description>  size <size>  category  <category>  unit_price  <unit_price>        [temperature  (frozen  | refrigerated  |  ambient  |  warm  |  hot  )]
define  product  prod10        name  bournvita  description  bournvita  size 250  category  Food  unit_price  2        temperature  ambient
define  product  prod11        name  tea  description  green_tea  size 500  category  Food  unit_price  1        temperature  ambient
define  product  prod12        name  coffee  description  coffee  size 100  category  Food  unit_price  3        temperature  refrigerated
define  product  prod13        name  goggles  description  spectacles  size 3  category  Men_accessories  unit_price  5        temperature  ambient
define  product  prod14        name  sun_glass  description  spectacles  size 3  category  Fashion  unit_price  7        temperature  ambient


# Inventory Commands
# Define a new inventory item within the store
# define  inventory  <inventory_id>  location  <store_id>:<aisle_number>:<shelf_id> capacity  <capacity>  count  <count>  product  <product_id>
define  inventory  inv_u21  location  store_123:aisle_A1:shelf_q1 capacity  1500  count  1000  product  prod10
define  inventory  inv_u22  location  store_123:aisle_A1:shelf_q2 capacity  1500  count  1000  product  prod11
define  inventory  inv_u23  location  store_123:aisle_B2:shelf_q1 capacity  500  count  200  product  prod11
define  inventory  inv_u24  location  store_123:aisle_B2:shelf_q2 capacity  500  count  200  product  prod10
define  inventory  inv_u25  location  store_123:aisle_A2:shelf_q1 capacity  200  count  100  product  prod10
define  inventory  inv_u26  location  store_123:aisle_A2:shelf_q3 capacity  300  count  100  product  prod12
define  inventory  inv_u27  location  store_123:aisle_A2:shelf_q1 capacity  200  count  50   product  prod12


#Customer Commands
# Define a new customer
# define  customer  <customer_id>        first_name  <first_name>  last_name  <last_name> type  (registered|guest)  email_address  <email>  account  <account_address>
define  customer  cust_1        first_name  JASON  last_name  WALLACE type  guest  email_address  jason.wallace@ymail.com  account  jason
define  customer  cust_2        first_name  BILL  last_name  ROSE type  registered  email_address  bill.rose@gmail.com  account  bill
define  customer  cust_3        first_name  MARY last_name  KELVIN type  registered  email_address  mary.kevin@yahoomail.com  account  mary
define  customer  cust_4        first_name  SILVER  last_name  HAWK type  guest  email_address  silver.hawk@rocketmail.com  account  silver
define  customer  cust_5        first_name  MEGON  last_name  FOX type  guest  email_address  megonfox@testmail.com  account  megon
define  customer  cust_6        first_name  MARIA last_name  WILIAMSON type  registered  email_address  maria4567@ymail.com  account  maria
define  customer  cust_7        first_name  SALINA  last_name  GOMEZ type  registered  email_address  salina@gmail.com  account  salina


# Update the location of a customer
# update  customer  <customer_id>  location  <store:aisle>
update  customer  cust_2  location  store_123:aisle_B2
update  customer  cust_5  location  store_123:aisle_A2
update  customer  cust_6  location  store_123:aisle_A2


# Basket Commands
# Get basket_id associated with the customer, create new basket if the customer does not already have a basket associated.
# get_customer_basket  <customer_id>
get customer_basket  cust_2
get customer_basket  cust_5
get customer_basket  cust_6



# Create Sensors
# define  device  <device_id>  name  <name>  type  (microphone|camera)  location <store>:<aisle>
define  device  mic_A1  name  MicrophoneA1  type  microphone  location store_123:aisle_A2
define  device  cam_A1  name  CameraA1  type  camera  location store_123:aisle_A2
define  device  cam_A2  name  CameraA2  type  camera  location store_123:aisle_A1
define  device  cam_B2  name  CameraB1  type  camera  location store_123:aisle_B2


# Create Appliances
# define  device  <device_id>  name  <name>  type  (speaker  |  robot  |  turnstile) location  <store>:<aisle>
define  device  rob_1  name  ROBOT_1  type  robot location  store_123:aisle_A1
define  device  rob_2  name  ROBOT_2  type  robot location  store_123:aisle_A2
define  device  spk_1  name  SPEAKER_1  type  speaker location  store_123:aisle_A1
define  device  spk_2  name  SPEAKER_2  type  speaker location  store_123:aisle_A2
define  device  turn_a1  name  TURNSTILE_A1  type  turnstile location  store_123:aisle_A2
define  device  turn_a2  name  TURNSTILE_A2  type  turnstile location  store_123:aisle_A2
define  device  turn_a3  name  TURNSTILE_A3  type  turnstile location  store_123:aisle_A2

#############
# LEDGER INIT
#############

# create-account <account-id>
create-account jason
create-account bill
create-account mary
create-account silver
create-account megon
create-account maria
create-account salina

# process-transaction <transaction-id> amount <amount> fee <fee> payload <payload> payer <account-address> receiver <account-address>
process-transaction 1 amount 1000 fee 10 payload "fund account" payer master receiver jason
process-transaction 2 amount 1000 fee 10 payload "fund account" payer master receiver bill
process-transaction 3 amount 1000 fee 10 payload "fund account" payer master receiver mary
process-transaction 4 amount 1000 fee 10 payload "fund account" payer master receiver silver
process-transaction 5 amount 1000 fee 10 payload "fund account" payer master receiver megon
process-transaction 6 amount 1000 fee 10 payload "fund account" payer master receiver maria
process-transaction 7 amount 1000 fee 10 payload "fund account" payer master receiver salina
process-transaction 8 amount 1000 fee 10 payload "fund account" payer master receiver jason
process-transaction 9 amount 1000 fee 10 payload "fund account" payer master receiver bill
process-transaction 10 amount 1000 fee 10 payload "fund account" payer master receiver mary


# show the details of block #1
get-block 1

# validate the state of the blockchain
Validate

#################
# Device Commands
#################

# Enter store
# customer <customer> waiting to enter at the turnstile <turnstile>

create event turn_a1 event "customer cust_1 waiting to enter at the turnstile turn_a1"

create event turn_a2 event "customer cust_2 waiting to enter at the turnstile turn_a2"

create event turn_a3 event "customer cust_3 waiting to enter at the turnstile turn_a3"

create event turn_a1 event "customer cust_4 waiting to enter at the turnstile turn_a1"

create event turn_a2 event "customer cust_5 waiting to enter at the turnstile turn_a2"

create event turn_a3 event "customer cust_6 waiting to enter at the turnstile turn_a3"

create event turn_a1 event "customer cust_7 waiting to enter at the turnstile turn_a1"


####################################################################
# Emergency Command
# emergency (fire | flood | earthquake | armed intruder) in <aisle>
# emergency fire in aisle_A1
####################################################################

create event cam_A1 event "emergency fire in aisle_A1"

create event cam_B2 event "emergency flood in aisle_A1"

####################################################################
# Basket Event
# customer <customer> (adds | removes) <product> from <aisle:shelf>
####################################################################

create event cam_A1 event "customer cust_1 adds prod_1 from aisle_A1:shelf_A1"

####################################################################
# Cleaning Event
# product <product> on floor <store:aisle>
####################################################################

create event cam_A1 event "product prod10 on floor store_123:aisle_A1"

create event cam_A1 event "product prod11 on floor store_123:aisle_A2"

create event cam_A1 event "product prod13 on floor store_123:aisle_B1"

####################################################################
# Broken glass
# sound of breaking glass in <aisle>
####################################################################

create event mic_A1 event "sound of breaking glass in aisle_A1"

create event mic_A1 event "sound of breaking glass in aisle_A2"

create event mic_A1 event "sound of breaking glass in aisle_B1"

create event mic_A1 event "sound of breaking glass in aisle_B3"

####################################################################
# Missing person
# can you help me find <customer name>
####################################################################

create event mic_A1 event "can you help me find cust_1"

create event mic_A1 event "can you help me find cust_2"

create event mic_A1 event "can you help me find cust_4"

####################################################################
# Customer seen
# customer <customer> enters <aisle>
####################################################################

create event cam_A1 event "customer cust_1 enters aisle_A1"

create event cam_B2 event "customer cust_3 enters aisle_B2"

create event cam_B2 event "customer cust_3 enters aisle_B3"

create event cam_A2 event "customer cust_7 enters aisle_A2"

####################################################################
# Fetch product
# customer <customer> says please get me <number> of <product>
####################################################################

create event mic_A1 event "customer cust_1 says please get me 3 of prod10"

create event mic_A1 event "customer cust_2 says please get me 3 of prod13"

create event mic_A1 event "customer cust_3 says please get me 3 of prod13"

create event mic_A1 event "customer cust_4 says please get me 3 of prod11"

####################################################################
# Check account balance
# customer <customer> says "What is the total basket value?"
####################################################################

create event mic_A1 event "customer cust_1 says 'What is the total basket value?'"

create event mic_A1 event "customer cust_2 says 'What is the total basket value?'"

create event mic_A1 event "customer cust_3 says 'What is the total basket value?'"

####################################################################
# Assist customer to car
# checkout: total weight of products in basket exceeds 10lbs
####################################################################

####################################################################
# Checkout
# customer <customer> approaches turnstile
####################################################################

create event turn_a1 event "customer cust_1 approaches turnstile"

create event turn_a2 event "customer cust_3 approaches turnstile"

create event turn_a3 event "customer cust_5 approaches turnstile"

