#########################################################################################
# Store Controller Service Sample Script
#
# Store configuration commands are mostly copied from Adaeze Ezeh's sample script posted
# for assignment 2, modified to accomodate slight syntax differences. The Controller
# commands (at the bottom) were written by Matthew Thomas for assignment 3.
#########################################################################################

################################################################################
# create root user
# create auth_root_user <user_id> <password>
################################################################################


create auth_root_user root root

################################################################################
# login
# login user <user_id> password <credential>
################################################################################
login user root password root


#########################################################################################
# Store configuration - copied from Adaeze Ezeh's store.script sample posted to Canvas
#########################################################################################

# Store Commands
# define  store  <identifier> name <name> address <address>
define  store  store_123 name RelianceMart  address  ahmedabad
define  store  store_456 name KwikEMary  address  springfield

# Aisle Commands
# Define an aisle within the store
# define  aisle  <store_id>:<aisle_number>  name  <name>  description  <description> location  (floor  |  stock_room)
define  aisle  store_123:aisle_A1  name  AISLE_A1  description  AISLE_A1_desc location  stock_room
define  aisle  store_123:aisle_A2  name  AISLE_A2  description  AISLE_A2_desc location  floor
define  aisle  store_123:aisle_A3  name  AISLE_A3  description  AISLE_A3_desc location  floor
define  aisle  store_123:aisle_B1  name  AISLE_B1  description  AISLE_B1_desc location  stock_room
define  aisle  store_123:aisle_B2  name  AISLE_B2  description  AISLE_B2_desc location  floor
define  aisle  store_123:aisle_B3  name  AISLE_B3  description  AISLE_B3_desc location  floor

#Shelf Commands
# Define a new shelf within the store
# define  shelf  <store_id>:<aisle_number>:<shelf_id>  name  <name>  level  (high  | medium  |  low)  description  <description>  [temperature  (frozen  |  refrigerated  | ambient  |  warm  |  hot  )]
define  shelf  store_123:aisle_A1:shelf_q1  name  Shelf_Q1  level  high   description  Shelf_Q1_Desc  temperature  frozen
define  shelf  store_123:aisle_A1:shelf_q2  name  Shelf_Q2  level  medium   description  Shelf_Q2_Desc  temperature  ambient
define  shelf  store_123:aisle_A1:shelf_q3  name  Shelf_Q3  level  low   description  Shelf_Q3_Desc  temperature  refrigerated
define  shelf  store_123:aisle_A1:shelf_q4  name  Shelf_Q4  level  low   description  Shelf_Q4_Desc  temperature  warm
define  shelf  store_123:aisle_A1:shelf_q5  name  Shelf_Q5  level  medium   description  Shelf_Q5_Desc  temperature  hot


define  shelf  store_123:aisle_A2:shelf_q1  name  Shelf_Q1  level  high   description  Shelf_Q1_Desc  temperature  frozen
define  shelf  store_123:aisle_A2:shelf_q2  name  Shelf_Q2  level  medium   description  Shelf_Q2_Desc  temperature  ambient
define  shelf  store_123:aisle_A2:shelf_q3  name  Shelf_Q3  level  low   description  Shelf_Q3_Desc  temperature  refrigerated
define  shelf  store_123:aisle_A2:shelf_q4  name  Shelf_Q4  level  low   description  Shelf_Q4_Desc  temperature  warm
define  shelf  store_123:aisle_A2:shelf_q5  name  Shelf_Q5  level  medium   description  Shelf_Q5_Desc  temperature  hot


define  shelf  store_123:aisle_A3:shelf_q1  name  Shelf_Q1  level  high   description  Shelf_Q1_Desc  temperature  frozen
define  shelf  store_123:aisle_A3:shelf_q2  name  Shelf_Q2  level  medium   description  Shelf_Q2_Desc  temperature  ambient
define  shelf  store_123:aisle_A3:shelf_q3  name  Shelf_Q3  level  low   description  Shelf_Q3_Desc  temperature  refrigerated
define  shelf  store_123:aisle_A3:shelf_q4  name  Shelf_Q4  level  low   description  Shelf_Q4_Desc  temperature  warm
define  shelf  store_123:aisle_A3:shelf_q5  name  Shelf_Q5  level  medium   description  Shelf_Q5_Desc  temperature  hot


define  shelf  store_123:aisle_B1:shelf_q1  name  Shelf_Q1  level  high   description  Shelf_Q1_Desc  temperature  frozen
define  shelf  store_123:aisle_B1:shelf_q2  name  Shelf_Q2  level  medium   description  Shelf_Q2_Desc  temperature  ambient
define  shelf  store_123:aisle_B1:shelf_q3  name  Shelf_Q3  level  low   description  Shelf_Q3_Desc  temperature  refrigerated
define  shelf  store_123:aisle_B1:shelf_q4  name  Shelf_Q4  level  low   description  Shelf_Q4_Desc  temperature  warm
define  shelf  store_123:aisle_B1:shelf_q5  name  Shelf_Q5  level  medium   description  Shelf_Q5_Desc  temperature  hot


define  shelf  store_123:aisle_B2:shelf_q1  name  Shelf_Q1  level  high   description  Shelf_Q1_Desc  temperature  frozen
define  shelf  store_123:aisle_B2:shelf_q2  name  Shelf_Q2  level  medium   description  Shelf_Q2_Desc  temperature  ambient
define  shelf  store_123:aisle_B2:shelf_q3  name  Shelf_Q3  level  low   description  Shelf_Q3_Desc  temperature  refrigerated
define  shelf  store_123:aisle_B2:shelf_q4  name  Shelf_Q4  level  low   description  Shelf_Q4_Desc  temperature  warm
define  shelf  store_123:aisle_B2:shelf_q5  name  Shelf_Q5  level  medium   description  Shelf_Q5_Desc  temperature  hot


define  shelf  store_123:aisle_B3:shelf_q1  name  Shelf_Q1  level  high   description  Shelf_Q1_Desc  temperature  frozen
define  shelf  store_123:aisle_B3:shelf_q2  name  Shelf_Q2  level  medium   description  Shelf_Q2_Desc  temperature  ambient
define  shelf  store_123:aisle_B3:shelf_q3  name  Shelf_Q3  level  low   description  Shelf_Q3_Desc  temperature  refrigerated
define  shelf  store_123:aisle_B3:shelf_q4  name  Shelf_Q4  level  low   description  Shelf_Q4_Desc  temperature  warm
define  shelf  store_123:aisle_B3:shelf_q5  name  Shelf_Q5  level  medium   description  Shelf_Q5_Desc  temperature  hot


# Define a new product
# define  product  <product_id>        name  <name>  description  <description>  size <size>  category  <category>  unit_price  <unit_price>        [temperature  (frozen  | refrigerated  |  ambient  |  warm  |  hot  )]
define  product  prod10        name  bournvita  description  bournvita  size 12  category  Food  unit_price  2        temperature  frozen
define  product  prod11        name  tea  description  green_tea  size 1.5  category  Food  unit_price  1        temperature  ambient
define  product  prod12        name  coffee  description  coffee  size 1.5  category  Food  unit_price  3        temperature  refrigerated
define  product  prod13        name  goggles  description  spectacles  size 1  category  Men_accessories  unit_price  5        temperature  ambient
define  product  prod14        name  sun_glass  description  spectacles  size 2  category  Fashion  unit_price  7        temperature  ambient


# Inventory Commands
# Define a new inventory item within the store
# define  inventory  <inventory_id>  location  <store_id>:<aisle_number>:<shelf_id> capacity  <capacity>  count  <count>  product  <product_id>
define  inventory  inv_u21  location  store_123:aisle_A1:shelf_q1 capacity  1500  count  1000  product  prod10
define  inventory  inv_u22  location  store_123:aisle_A1:shelf_q2 capacity  1500  count  1000  product  prod11
define  inventory  inv_u23  location  store_123:aisle_B2:shelf_q2 capacity  500  count  200  product  prod11
define  inventory  inv_u24  location  store_123:aisle_B2:shelf_q2 capacity  500  count  200  product  prod13
define  inventory  inv_u25  location  store_123:aisle_A2:shelf_q2 capacity  200  count  100  product  prod14
define  inventory  inv_u26  location  store_123:aisle_A2:shelf_q3 capacity  300  count  100  product  prod12
define  inventory  inv_u27  location  store_123:aisle_A2:shelf_q3 capacity  200  count  50   product  prod12

#Customer Commands
# Define a new customer
# define  customer  <customer_id>        first_name  <first_name>  last_name  <last_name> type  (registered|guest)  email_address  <email>  account  <account_address>
define  customer  cust_1        first_name  JASON  last_name  WALLACE type  guest  email_address  jason.wallace@ymail.com  account  jason
define  customer  cust_2        first_name  BILL  last_name  ROSE type  registered  email_address  bill.rose@gmail.com  account  bill
define  customer  cust_3        first_name  MARY last_name  KELVIN type  registered  email_address  mary.kevin@yahoomail.com  account  mary
define  customer  cust_4        first_name  SILVER  last_name  HAWK type  guest  email_address  silver.hawk@rocketmail.com  account  silver
define  customer  cust_5        first_name  MEGON  last_name  FOX type  guest  email_address  megonfox@testmail.com  account  megon
define  customer  cust_6        first_name  MARIA last_name  WILIAMSON type  registered  email_address  maria4567@ymail.com  account  maria
define  customer  cust_7        first_name  SALINA  last_name  GOMEZ type  registered  email_address  salina@gmail.com  account  salina

# Create Sensors
# define  device  <device_id>  name  <name>  type  (microphone|camera)  location <store>:<aisle>
define  device  mic_A1  name  MicrophoneA1  type  microphone  location store_123:aisle_A2
define  device  cam_A1  name  CameraA1  type  camera  location store_123:aisle_A1
define  device  cam_A2  name  CameraA2  type  camera  location store_123:aisle_A2
define  device  cam_B2  name  CameraB1  type  camera  location store_123:aisle_B2

# Create Appliances
# define  device  <device_id>  name  <name>  type  (speaker  |  robot  |  turnstile) location  <store>:<aisle>
define  device  rob_1  name  ROBOT_1  type  robot location  store_123:aisle_A1
define  device  rob_2  name  ROBOT_2  type  robot location  store_123:aisle_A2
define  device  rob_3  name  ROBOT_3  type  robot location  store_123:aisle_A3
define  device  rob_4  name  ROBOT_4  type  robot location  store_123:aisle_B1
define  device  rob_5  name  ROBOT_5  type  robot location  store_123:aisle_B2
define  device  spk_1  name  SPEAKER_1  type  speaker location  store_123:aisle_A1
define  device  spk_2  name  SPEAKER_2  type  speaker location  store_123:aisle_A2
define  device  turn_a1  name  TURNSTILE_A1  type  turnstile location  store_123:aisle_A2
define  device  turn_a2  name  TURNSTILE_A2  type  turnstile location  store_123:aisle_A2
define  device  turn_a3  name  TURNSTILE_A3  type  turnstile location  store_123:aisle_A2

#########################################################################################
# Ledger configuration
#########################################################################################

# create-account <account-id>
create-account jason
create-account bill
create-account mary
create-account silver
create-account megon
create-account maria
create-account salina

# process-transaction <transaction-id> amount <amount> fee <fee> payload <payload> payer <account-address> receiver <account-address>
process-transaction 1 amount 20 fee 10 payload "fund account" payer master receiver jason
process-transaction 2 amount 200 fee 10 payload "fund account" payer master receiver bill
process-transaction 3 amount 300 fee 10 payload "fund account" payer master receiver mary
process-transaction 4 amount 400 fee 10 payload "fund account" payer master receiver silver
process-transaction 5 amount 500 fee 10 payload "fund account" payer master receiver megon
process-transaction 6 amount 600 fee 10 payload "fund account" payer master receiver maria
process-transaction 7 amount 700 fee 10 payload "fund account" payer master receiver salina

# validate the state of the blockchain
Validate


# define user user1 "john"


################################################################################
# define user
# define user <user_id> <user_name>
################################################################################
define user user1 "jason"
define user user2 "bill"
define user user3 "mary"



################################################################################
# define user credential
# define credential <user_id> (voice_print | face_print | password) <value>
################################################################################
define credential user1 voice_print --voice:jason--
define credential user1 face_print --face:jason--
define credential user1 password "hello world"

define credential foobar password "hello world"

define credential user2 voice_print --voice:bill--

################################################################################
# define resource
# define resource <resource_id> <resource_description>
################################################################################
define resource store_123 "Store 123"
define resource turn_A1 "Turnstile A1"

################################################################################
# define permission
# define permission <permission_id> <permission_name> <permission_description>
################################################################################
define permission user_admin "User administrator" "Create, Update, Delete Users"
define permission checkout "Checkout of store" "Permission to checkout of store"
define permission enter_store "Enter store" "Permission to enter store"
define permission control_robot "Control robot" "Full control of robots"
define permission control_speaker "Control speaker" "Full control of speakers"
define permission control_turnstile "Control turnstile" "Full control of turnstiles"
define permission open_access "Open access" "No restrictions on who can call"

################################################################################
# define role
# define role <role_id> <role_name> <role_description> [<resource_id>]
################################################################################
define role adult_consumer "Adult consumer role" "Has all permissions of an adult consumer"
define role child_consumer "Child consumer role" "Has all permissions of an child consumer"
define role guest "Guest role" "Has all permissions of a guest"
define role admin "Admin role" "Has all permissions of an administrator"

define role store_123_guest "Store 123 Guest" "Has all permissions of a guest in Store 123" store_123
define role store_123_adult "Store 123 Adult Consumer" "Has all permissions of an Adult consumer in Store 123" store_123


################################################################################
# add permission to role
# add entitlement_to_role <entitlement_id> <role_id>
################################################################################
add entitlement_to_role user_admin admin
add entitlement_to_role control_robot admin
add entitlement_to_role control_speaker admin
add entitlement_to_role control_turnstile admin
add entitlement_to_role open_access admin


add entitlement_to_role checkout adult_consumer
add entitlement_to_role enter_store adult_consumer
add entitlement_to_role control_robot adult_consumer
add entitlement_to_role open_access adult_consumer

add entitlement_to_role enter_store child_consumer
add entitlement_to_role checkout child_consumer
add entitlement_to_role open_access child_consumer

add entitlement_to_role enter_store guest
add entitlement_to_role open_access guest


add entitlement_to_role adult_consumer store_123_adult

################################################################################
# add entitlement to user
# add entitlement_to_user <user_id> <entitlement_id>
################################################################################
add entitlement_to_user user1 admin
add entitlement_to_user user1 admin
add entitlement_to_user user1 adult_consumer

add entitlement_to_user user2 guest

add entitlement_to_user user3 child_consumer

################################################################################
# Run InventoryVisitor
################################################################################
get auth_inventory foobar

################################################################################
# Controller commands - written by Matthew Thomas
################################################################################

################################################################################
# Enter store
# create event <turnstile> event "customer <customer> waiting to enter at the turnstile <turnstile>"
################################################################################

# Welcome JASON WALLACE to the store
create event turn_a1 event "user1 --face:jason-- customer cust_1 waiting to enter"

# Welcome BILL ROSE to the store
create event turn_a2 event "user2 --voice:bill-- customer cust_2 waiting to enter"

# Welcome MARY KELVIN to the store
create event turn_a3 event "user3 --face:mary-- customer cust_3 waiting to enter"

# Welcome SILVER HAWK to the store
#create event turn_a1 event "user4 --face:cust_4-- customer cust_4 waiting to enter"

# Welcome MEGON FOX to the store
#create event turn_a2 event "user5 --face:cust_5-- customer cust_5 waiting to enter"



################################################################################
# logout
# login user <user_id> password <credential>
################################################################################
logout foobar foobar
