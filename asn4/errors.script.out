################################################################################
# Authentication commands - written by Matthew Thomas
# Displays error conditions
################################################################################

# Missing information
create auth_root_user
create auth_root_user: Missing arguments. (line 7).

create auth_root_user root
create: Missing root password.


# Create root user
create auth_root_user root "hello world"

# Since root is created, root AuthToken is needed
define permission permission_1 permission_name permission_desc
invalid token null: No token provided.
define role guest "Guest role" "Has all permissions of a guest"
invalid token null: No token provided.

# Log in missing information
login user root
login failed: no password provided

# Incorrect password
login user root password "no this password"
login: does not have permission 'login credential is not recognized for root'

# Login in root to proceed
login user root password "hello world"
logged in: root


# Missing information
define permission
define permission: Missing arguments. (line 28).

define permission perm_1
define permission: Missing parameters

define permission perm_1 perm_name
define permission: Missing parameters


# Create Permissions
define permission checkout "Checkout of store" "Permission to checkout of store"
Defined new permission: 'checkout: Checkout of store'.
define permission enter_store "Enter store" "Permission to enter store"
Defined new permission: 'enter_store: Enter store'.
define permission control_robot "Control robot" "Full control of robots"
Defined new permission: 'control_robot: Control robot'.
define permission control_speaker "Control speaker" "Full control of speakers"
Defined new permission: 'control_speaker: Control speaker'.
define permission control_turnstile "Control turnstile" "Full control of turnstiles"
Defined new permission: 'control_turnstile: Control turnstile'.
define permission open_access "Open access" "No restrictions on who can call"
Defined new permission: 'open_access: Open access'.
define permission basket_items "Basket items" "Allowed to add/remove basket items"
Defined new permission: 'basket_items: Basket items'.


# Creating duplicate should fail
define permission control_speaker "Control speaker" "Full control of speakers"
define permission: A Permission with id control_speaker already exists.


# Create Roles (no Resources)
define role adult_consumer "Adult consumer role" "Has all permissions of an adult consumer"
Defined new role: 'adult_consumer: Adult consumer role'.
define role child_consumer "Child consumer role" "Has all permissions of an child consumer"
Defined new role: 'child_consumer: Child consumer role'.
define role guest "Guest role" "Has all permissions of a guest"
Defined new role: 'guest: Guest role'.
define role admin "Admin role" "Has all permissions of an administrator"
Defined new role: 'admin: Admin role'.

# Creating duplicate should fail
define role admin "Admin role" "Has all permissions of an administrator"
define role: A Role with id admin already exists.

# Fail to create Roles (with Resources) -- should fail because Resources do not exist yet
define role store_123_guest "Store 123 Guest" "Has all permissions of a guest in Store 123" store_123
define resource role: The resource store_123 does not exist. Cannot create resource role.
define role store_123_adult "Store 123 Adult Consumer" "Has all permissions of an Adult consumer in Store 123" store_123
define resource role: The resource store_123 does not exist. Cannot create resource role.

# Create Resources - uses 'define store' commands from Store Model Service
define  store  store_123 name RelianceMart  address  ahmedabad
Defined new store: 'store_123'.
define  store  store_456 name KwikEMary  address  springfield
Defined new store: 'store_456'.


# Try again to create Roles (with Resources) -- should succeed now because Resources exist
define role store_123_guest "Store 123 Guest" "Has all permissions of a guest in Store 123" store_123
Defined new role: 'store_123_guest: Store 123 Guest'.
define role store_123_adult "Store 123 Adult Consumer" "Has all permissions of an Adult consumer in Store 123" store_123
Defined new role: 'store_123_adult: Store 123 Adult Consumer'.

# Permission does not exist
add entitlement_to_role foobar admin
Added entitlement foobar to role admin
add entitlement to role: Entitlement foobar does not exist.

# Role does not exist
add entitlement_to_role user_admin foobar
Added entitlement user_admin to role foobar
add entitlement to role: Role foobar does not exist.

# Add Entitlements to Roles
add entitlement_to_role user_admin admin
Added entitlement user_admin to role admin
add entitlement_to_role control_robot admin
Added entitlement control_robot to role admin
add entitlement_to_role control_speaker admin
Added entitlement control_speaker to role admin
add entitlement_to_role basket_items admin
Added entitlement basket_items to role admin
add entitlement_to_role checkout admin
Added entitlement checkout to role admin
add entitlement_to_role control_turnstile admin
Added entitlement control_turnstile to role admin
add entitlement_to_role open_access admin
Added entitlement open_access to role admin


add entitlement_to_role checkout adult_consumer
Added entitlement checkout to role adult_consumer
add entitlement_to_role enter_store adult_consumer
Added entitlement enter_store to role adult_consumer
add entitlement_to_role control_robot adult_consumer
Added entitlement control_robot to role adult_consumer
add entitlement_to_role open_access adult_consumer
Added entitlement open_access to role adult_consumer
add entitlement_to_role basket_items adult_consumer
Added entitlement basket_items to role adult_consumer

add entitlement_to_role enter_store child_consumer
Added entitlement enter_store to role child_consumer
add entitlement_to_role checkout child_consumer
Added entitlement checkout to role child_consumer
add entitlement_to_role open_access child_consumer
Added entitlement open_access to role child_consumer
add entitlement_to_role basket_items adult_consumer
Added entitlement basket_items to role adult_consumer

add entitlement_to_role enter_store guest
Added entitlement enter_store to role guest
add entitlement_to_role open_access guest
Added entitlement open_access to role guest


add entitlement_to_role adult_consumer store_123_adult
Added entitlement adult_consumer to role store_123_adult

# Fail to add Entitlements To User -- no Users have been created yet
add entitlement_to_user cust_1 admin
Added entitlement admin to user cust_1
get user: A user with id 'cust_1' is not registered with the AuthenticationService.
add entitlement_to_user cust_2 adult_consumer
Added entitlement adult_consumer to user cust_2
get user: A user with id 'cust_2' is not registered with the AuthenticationService.

# Fail to add Credentials to Users -- no Users have been created yet
define credential cust_1 voice_print "--voice:JASON WALLACE--"
get user: A user with id 'cust_1' is not registered with the AuthenticationService.
define credential cust_2 face_print "--face:BILL ROSE--"
get user: A user with id 'cust_2' is not registered with the AuthenticationService.
define credential cust_3 voice_print "--voice:MARY KELVIN--"
get user: A user with id 'cust_3' is not registered with the AuthenticationService.

# Create Users = uses 'define customer' commands from Store Model Service
define  customer  cust_1        first_name  JASON  last_name  WALLACE type  guest  email_address  jason.wallace@ymail.com  account  jason
Defined new customer: 'cust_1'.
define  customer  cust_2        first_name  BILL  last_name  ROSE type  registered  email_address  bill.rose@gmail.com  account  bill
Defined new customer: 'cust_2'.
define  customer  cust_3        first_name  MARY last_name  KELVIN type  registered  email_address  mary.kevin@yahoomail.com  account  mary
Defined new customer: 'cust_3'.
define  customer  cust_4        first_name  SILVER  last_name  HAWK type  guest  email_address  silver.hawk@rocketmail.com  account  silver
Defined new customer: 'cust_4'.
define  customer  cust_5        first_name  MEGON  last_name  FOX type  guest  email_address  megonfox@testmail.com  account  megon
Defined new customer: 'cust_5'.
define  customer  cust_6        first_name  MARIA last_name  WILIAMSON type  registered  email_address  maria4567@ymail.com  account  maria
Defined new customer: 'cust_6'.
define  customer  cust_7        first_name  SALINA  last_name  GOMEZ type  registered  email_address  salina@gmail.com  account  salina
Defined new customer: 'cust_7'.


# Successfully add Entitlements to Users
add entitlement_to_user root open_access
Added entitlement open_access to user root
add entitlement_to_user root admin
Added entitlement admin to user root


add entitlement_to_user cust_1 admin
Added entitlement admin to user cust_1
add entitlement_to_user cust_1 admin
Added entitlement admin to user cust_1
add entitlement_to_user cust_1 adult_consumer
Added entitlement adult_consumer to user cust_1

add entitlement_to_user cust_2 adult_consumer
Added entitlement adult_consumer to user cust_2

add entitlement_to_user cust_3 child_consumer
Added entitlement child_consumer to user cust_3

#add entitlement_to_user cust_5 adult_consumer

# Successfully add credentials to Users
define credential cust_1 voice_print "--voice:JASON WALLACE--"
Defined new credential: '--voice:JASON WALLACE--'.
define credential cust_1 face_print "--face:JASON WALLACE--"
Defined new credential: '--face:JASON WALLACE--'.
define credential cust_1 password "hello world"
Defined new credential: 'uU0nuZNNPgilLlLX2n2r+sSE7+N6U4DukIj3rOLvzek='.


# When the TOKEN_TIMEOUT in AuthenticationService.java is set to '27', this should
# simulate Token timeout conditions. Some of these tests may pass, but a few
# should display the "invalid token" message.
define credential cust_2 voice_print "--voice:BILL ROSE--"
invalid token 1: Token has exceeded timeout duration of 27
define credential cust_2 face_print "--face:BILL ROSE--"
invalid token 1: Token has exceeded timeout duration of 27

define credential cust_3 voice_print "--voice:MARY KELVIN--"
invalid token 1: Token has exceeded timeout duration of 27
define credential cust_3 face_print "--face:MARY KELVIN--"
invalid token 1: Token has exceeded timeout duration of 27

define credential cust_1 voice_print "--voice:JASON WALLACE--"
invalid token 1: Token has exceeded timeout duration of 27
define credential cust_2 face_print "--face:BILL ROSE--"
invalid token 1: Token has exceeded timeout duration of 27
define credential cust_3 voice_print "--voice:MARY KELVIN--"
invalid token 1: Token has exceeded timeout duration of 27

################################################################################
# Control command errors can be found within the authentication.script.out file.
# Those errors demonstrate lack of permissions and Invalid AuthTokens.
################################################################################
