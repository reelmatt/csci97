#########################################################################################
# Store configuration - copied from Adaeze Ezeh's store.script sample posted to Canvas
#
# The first four commands are for the Authentication Service to create a root user, log
# the root user in, and create an additional permission to allow 'root' to create Store
# objects. The rest are commands from assignment 2, with syntax changes noted below.
#########################################################################################

################################################################################
# create root user
# create auth_root_user <user_id> <password>
################################################################################
create auth_root_user root root

################################################################################
# login
# login user <user_id> password <credential>
################################################################################
login user root password root
logged in: root

################################################################################
# define permission
# define permission <permission_id> <permission_name> <permission_description>
################################################################################
define permission open_access "Open access" "No restrictions on who can call"
Defined new permission: 'open_access: Open access'.

################################################################################
# add entitlement to user
# add entitlement_to_user <user_id> <entitlement_id>
################################################################################
add entitlement_to_user root open_access
Added entitlement open_access to user root



# Store Commands
# define  store  <identifier> name <name> address <address>
define  store  store_123 name RelianceMart  address  ahmedabad
Defined new store: 'store_123'.
define  store  store_456 name KwikEMary  address  springfield
Defined new store: 'store_456'.

# Aisle Commands
# Define an aisle within the store
# define  aisle  <store_id>:<aisle_number>  name  <name>  description  <description> location  (floor  |  stock_room)
define  aisle  store_123:aisle_A1  name  AISLE_A1  description  AISLE_A1_desc location  stock_room
Defined new aisle: 'aisle_A1'.
define  aisle  store_123:aisle_A2  name  AISLE_A2  description  AISLE_A2_desc location  floor
Defined new aisle: 'aisle_A2'.
define  aisle  store_123:aisle_A3  name  AISLE_A3  description  AISLE_A3_desc location  floor
Defined new aisle: 'aisle_A3'.
define  aisle  store_123:aisle_B1  name  AISLE_B1  description  AISLE_B1_desc location  stock_room
Defined new aisle: 'aisle_B1'.
define  aisle  store_123:aisle_B2  name  AISLE_B2  description  AISLE_B2_desc location  floor
Defined new aisle: 'aisle_B2'.
define  aisle  store_123:aisle_B3  name  AISLE_B3  description  AISLE_B3_desc location  floor
Defined new aisle: 'aisle_B3'.

#Shelf Commands
# Define a new shelf within the store
# define  shelf  <store_id>:<aisle_number>:<shelf_id>  name  <name>  level  (high  | medium  |  low)  description  <description>  [temperature  (frozen  |  refrigerated  | ambient  |  warm  |  hot  )]
define  shelf  store_123:aisle_A1:shelf_q1  name  Shelf_Q1  level  high   description  Shelf_Q1_Desc  temperature  frozen
Defined new shelf: 'shelf_q1'.
define  shelf  store_123:aisle_A1:shelf_q2  name  Shelf_Q2  level  medium   description  Shelf_Q2_Desc  temperature  ambient
Defined new shelf: 'shelf_q2'.
define  shelf  store_123:aisle_A1:shelf_q3  name  Shelf_Q3  level  low   description  Shelf_Q3_Desc  temperature  refrigerated
Defined new shelf: 'shelf_q3'.
define  shelf  store_123:aisle_A1:shelf_q4  name  Shelf_Q4  level  low   description  Shelf_Q4_Desc  temperature  warm
Defined new shelf: 'shelf_q4'.
define  shelf  store_123:aisle_A1:shelf_q5  name  Shelf_Q5  level  medium   description  Shelf_Q5_Desc  temperature  hot
Defined new shelf: 'shelf_q5'.


define  shelf  store_123:aisle_A2:shelf_q1  name  Shelf_Q1  level  high   description  Shelf_Q1_Desc  temperature  frozen
Defined new shelf: 'shelf_q1'.
define  shelf  store_123:aisle_A2:shelf_q2  name  Shelf_Q2  level  medium   description  Shelf_Q2_Desc  temperature  ambient
Defined new shelf: 'shelf_q2'.
define  shelf  store_123:aisle_A2:shelf_q3  name  Shelf_Q3  level  low   description  Shelf_Q3_Desc  temperature  refrigerated
Defined new shelf: 'shelf_q3'.
define  shelf  store_123:aisle_A2:shelf_q4  name  Shelf_Q4  level  low   description  Shelf_Q4_Desc  temperature  warm
Defined new shelf: 'shelf_q4'.
define  shelf  store_123:aisle_A2:shelf_q5  name  Shelf_Q5  level  medium   description  Shelf_Q5_Desc  temperature  hot
Defined new shelf: 'shelf_q5'.


define  shelf  store_123:aisle_A3:shelf_q1  name  Shelf_Q1  level  high   description  Shelf_Q1_Desc  temperature  frozen
Defined new shelf: 'shelf_q1'.
define  shelf  store_123:aisle_A3:shelf_q2  name  Shelf_Q2  level  medium   description  Shelf_Q2_Desc  temperature  ambient
Defined new shelf: 'shelf_q2'.
define  shelf  store_123:aisle_A3:shelf_q3  name  Shelf_Q3  level  low   description  Shelf_Q3_Desc  temperature  refrigerated
Defined new shelf: 'shelf_q3'.
define  shelf  store_123:aisle_A3:shelf_q4  name  Shelf_Q4  level  low   description  Shelf_Q4_Desc  temperature  warm
Defined new shelf: 'shelf_q4'.
define  shelf  store_123:aisle_A3:shelf_q5  name  Shelf_Q5  level  medium   description  Shelf_Q5_Desc  temperature  hot
Defined new shelf: 'shelf_q5'.


define  shelf  store_123:aisle_B1:shelf_q1  name  Shelf_Q1  level  high   description  Shelf_Q1_Desc  temperature  frozen
Defined new shelf: 'shelf_q1'.
define  shelf  store_123:aisle_B1:shelf_q2  name  Shelf_Q2  level  medium   description  Shelf_Q2_Desc  temperature  ambient
Defined new shelf: 'shelf_q2'.
define  shelf  store_123:aisle_B1:shelf_q3  name  Shelf_Q3  level  low   description  Shelf_Q3_Desc  temperature  refrigerated
Defined new shelf: 'shelf_q3'.
define  shelf  store_123:aisle_B1:shelf_q4  name  Shelf_Q4  level  low   description  Shelf_Q4_Desc  temperature  warm
Defined new shelf: 'shelf_q4'.
define  shelf  store_123:aisle_B1:shelf_q5  name  Shelf_Q5  level  medium   description  Shelf_Q5_Desc  temperature  hot
Defined new shelf: 'shelf_q5'.


define  shelf  store_123:aisle_B2:shelf_q1  name  Shelf_Q1  level  high   description  Shelf_Q1_Desc  temperature  frozen
Defined new shelf: 'shelf_q1'.
define  shelf  store_123:aisle_B2:shelf_q2  name  Shelf_Q2  level  medium   description  Shelf_Q2_Desc  temperature  ambient
Defined new shelf: 'shelf_q2'.
define  shelf  store_123:aisle_B2:shelf_q3  name  Shelf_Q3  level  low   description  Shelf_Q3_Desc  temperature  refrigerated
Defined new shelf: 'shelf_q3'.
define  shelf  store_123:aisle_B2:shelf_q4  name  Shelf_Q4  level  low   description  Shelf_Q4_Desc  temperature  warm
Defined new shelf: 'shelf_q4'.
define  shelf  store_123:aisle_B2:shelf_q5  name  Shelf_Q5  level  medium   description  Shelf_Q5_Desc  temperature  hot
Defined new shelf: 'shelf_q5'.


define  shelf  store_123:aisle_B3:shelf_q1  name  Shelf_Q1  level  high   description  Shelf_Q1_Desc  temperature  frozen
Defined new shelf: 'shelf_q1'.
define  shelf  store_123:aisle_B3:shelf_q2  name  Shelf_Q2  level  medium   description  Shelf_Q2_Desc  temperature  ambient
Defined new shelf: 'shelf_q2'.
define  shelf  store_123:aisle_B3:shelf_q3  name  Shelf_Q3  level  low   description  Shelf_Q3_Desc  temperature  refrigerated
Defined new shelf: 'shelf_q3'.
define  shelf  store_123:aisle_B3:shelf_q4  name  Shelf_Q4  level  low   description  Shelf_Q4_Desc  temperature  warm
Defined new shelf: 'shelf_q4'.
define  shelf  store_123:aisle_B3:shelf_q5  name  Shelf_Q5  level  medium   description  Shelf_Q5_Desc  temperature  hot
Defined new shelf: 'shelf_q5'.


# Define a new product
# define  product  <product_id>        name  <name>  description  <description>  size <size>  category  <category>  unit_price  <unit_price>        [temperature  (frozen  | refrigerated  |  ambient  |  warm  |  hot  )]
define  product  prod10        name  bournvita  description  bournvita  size 12  category  Food  unit_price  2        temperature  frozen
Defined new product: 'prod10'.
define  product  prod11        name  tea  description  green_tea  size 1.5  category  Food  unit_price  1        temperature  ambient
Defined new product: 'prod11'.
define  product  prod12        name  coffee  description  coffee  size 1.5  category  Food  unit_price  3        temperature  refrigerated
Defined new product: 'prod12'.
define  product  prod13        name  goggles  description  spectacles  size 1  category  Men_accessories  unit_price  5        temperature  ambient
Defined new product: 'prod13'.
define  product  prod14        name  sun_glass  description  spectacles  size 2  category  Fashion  unit_price  7        temperature  ambient
Defined new product: 'prod14'.


# Inventory Commands
# Define a new inventory item within the store
# define  inventory  <inventory_id>  location  <store_id>:<aisle_number>:<shelf_id> capacity  <capacity>  count  <count>  product  <product_id>
define  inventory  inv_u21  location  store_123:aisle_A1:shelf_q1 capacity  1500  count  1000  product  prod10
Defined new inventory: 'inv_u21'.
define  inventory  inv_u22  location  store_123:aisle_A1:shelf_q2 capacity  1500  count  1000  product  prod11
Defined new inventory: 'inv_u22'.
define  inventory  inv_u23  location  store_123:aisle_B2:shelf_q2 capacity  500  count  200  product  prod11
Defined new inventory: 'inv_u23'.
define  inventory  inv_u24  location  store_123:aisle_B2:shelf_q2 capacity  500  count  200  product  prod13
Defined new inventory: 'inv_u24'.
define  inventory  inv_u25  location  store_123:aisle_A2:shelf_q2 capacity  200  count  100  product  prod14
Defined new inventory: 'inv_u25'.
define  inventory  inv_u26  location  store_123:aisle_A2:shelf_q3 capacity  300  count  100  product  prod12
Defined new inventory: 'inv_u26'.
define  inventory  inv_u27  location  store_123:aisle_A2:shelf_q3 capacity  200  count  50   product  prod12
Defined new inventory: 'inv_u27'.

#Customer Commands
# Define a new customer
# define  customer  <customer_id>        first_name  <first_name>  last_name  <last_name> type  (registered|guest)  email_address  <email>  account  <account_address>
define  customer  cust_1        first_name  JASON  last_name  WALLACE type  guest  email_address  jason.wallace@ymail.com  account  jason
Defined new customer: 'cust_1'.
define  customer  cust_2        first_name  BILL  last_name  ROSE type  registered  email_address  bill.rose@gmail.com  account  bill
Defined new customer: 'cust_2'.
define  customer  cust_3        first_name  MARY last_name  KELVIN type  registered  email_address  mary.kevin@yahoomail.com  account  mary
Defined new customer: 'cust_3'.
define  customer  cust_4        first_name  SILVER  last_name  HAWK type  guest  email_address  silver.hawk@rocketmail.com  account  silver
Defined new customer: 'cust_4'.
define  customer  cust_5        first_name  MEGON  last_name  FOX type  guest  email_address  megonfox@testmail.com  account  megon
Defined new customer: 'cust_5'.
define  customer  cust_6        first_name  MARIA last_name  WILIAMSON type  registered  email_address  maria4567@ymail.com  account  maria
Defined new customer: 'cust_6'.
define  customer  cust_7        first_name  SALINA  last_name  GOMEZ type  registered  email_address  salina@gmail.com  account  salina
Defined new customer: 'cust_7'.

# Create Sensors
# define  device  <device_id>  name  <name>  type  (microphone|camera)  location <store>:<aisle>
define  device  mic_A1  name  MicrophoneA1  type  microphone  location store_123:aisle_A2
Defined new device: 'mic_A1'.
define  device  cam_A1  name  CameraA1  type  camera  location store_123:aisle_A1
Defined new device: 'cam_A1'.
define  device  cam_A2  name  CameraA2  type  camera  location store_123:aisle_A2
Defined new device: 'cam_A2'.
define  device  cam_B2  name  CameraB1  type  camera  location store_123:aisle_B2
Defined new device: 'cam_B2'.

# Create Appliances
# define  device  <device_id>  name  <name>  type  (speaker  |  robot  |  turnstile) location  <store>:<aisle>
define  device  rob_1  name  ROBOT_1  type  robot location  store_123:aisle_A1
Defined new device: 'rob_1'.
define  device  rob_2  name  ROBOT_2  type  robot location  store_123:aisle_A2
Defined new device: 'rob_2'.
define  device  rob_3  name  ROBOT_3  type  robot location  store_123:aisle_A3
Defined new device: 'rob_3'.
define  device  rob_4  name  ROBOT_4  type  robot location  store_123:aisle_B1
Defined new device: 'rob_4'.
define  device  rob_5  name  ROBOT_5  type  robot location  store_123:aisle_B2
Defined new device: 'rob_5'.
define  device  spk_1  name  SPEAKER_1  type  speaker location  store_123:aisle_A1
Defined new device: 'spk_1'.
define  device  spk_2  name  SPEAKER_2  type  speaker location  store_123:aisle_A2
Defined new device: 'spk_2'.
define  device  turn_a1  name  TURNSTILE_A1  type  turnstile location  store_123:aisle_A2
Defined new device: 'turn_a1'.
define  device  turn_a2  name  TURNSTILE_A2  type  turnstile location  store_123:aisle_A2
Defined new device: 'turn_a2'.
define  device  turn_a3  name  TURNSTILE_A3  type  turnstile location  store_123:aisle_A2
Defined new device: 'turn_a3'.
#########################################################################################
# Authentication Service commands
#
# These commands all pertain to setting up the Authentication Service. Creating the root
# user, and logging the root user in, are performed in the 'store.script' file. This
# allows for the creation of Customers/Users and Stores/Resources via the
# CommandProcessor.
#
# As noted in the README file, the suggested flow for running the test scripts is
#   store.script -> authentication.script -> ledger.script -> controller.script
# which provides the output in the authentication.script.out file.
#########################################################################################

################################################################################
# define user credential
# define credential <user_id> (voice_print | face_print | password) <value>
################################################################################
define credential cust_1 voice_print "--voice:JASON WALLACE--"
Defined new credential: '--voice:JASON WALLACE--'.
define credential cust_1 face_print "--face:JASON WALLACE--"
Defined new credential: '--face:JASON WALLACE--'.
define credential cust_1 password "hello world"
Defined new credential: 'uU0nuZNNPgilLlLX2n2r+sSE7+N6U4DukIj3rOLvzek='.

define credential cust_2 voice_print "--voice:BILL ROSE--"
Defined new credential: '--voice:BILL ROSE--'.
define credential cust_2 face_print "--face:BILL ROSE--"
Defined new credential: '--face:BILL ROSE--'.

define credential cust_3 voice_print "--voice:MARY KELVIN--"
Defined new credential: '--voice:MARY KELVIN--'.
define credential cust_3 face_print "--face:MARY KELVIN--"
Defined new credential: '--face:MARY KELVIN--'.

define credential cust_4 voice_print "--voice:SILVER HAWK--"
Defined new credential: '--voice:SILVER HAWK--'.
define credential cust_4 face_print "--face:SILVER HAWK--"
Defined new credential: '--face:SILVER HAWK--'.

define credential cust_5 voice_print "--voice:MEGON FOX--"
Defined new credential: '--voice:MEGON FOX--'.
define credential cust_5 face_print "--face:MEGON FOX--"
Defined new credential: '--face:MEGON FOX--'.

define credential cust_6 voice_print "--voice:MARIA WILIAMSON--"
Defined new credential: '--voice:MARIA WILIAMSON--'.
define credential cust_6 face_print "--face:MARIA WILIAMSON--"
Defined new credential: '--face:MARIA WILIAMSON--'.

define credential cust_7 voice_print "--voice:SALINA GOMEZ--"
Defined new credential: '--voice:SALINA GOMEZ--'.
define credential cust_7 face_print "--face:SALINA GOMEZ--"
Defined new credential: '--face:SALINA GOMEZ--'.

################################################################################
# define permission
# define permission <permission_id> <permission_name> <permission_description>
################################################################################
define permission user_admin "User administrator" "Create, Update, Delete Users"
define permission: A Permission with id user_admin already exists.
define permission checkout "Checkout of store" "Permission to checkout of store"
Defined new permission: 'checkout: Checkout of store'.
define permission enter_store "Enter store" "Permission to enter store"
Defined new permission: 'enter_store: Enter store'.
define permission control_robot "Control robot" "Full control of robots"
Defined new permission: 'control_robot: Control robot'.
define permission control_speaker "Control speaker" "Full control of speakers"
Defined new permission: 'control_speaker: Control speaker'.
define permission control_turnstile "Control turnstile" "Full control of turnstiles"
Defined new permission: 'control_turnstile: Control turnstile'.
define permission open_access "Open access" "No restrictions on who can call"
define permission: A Permission with id open_access already exists.
define permission basket_items "Basket items" "Allowed to add/remove basket items"
Defined new permission: 'basket_items: Basket items'.

################################################################################
# define role
# define role <role_id> <role_name> <role_description> [<resource_id>]
################################################################################
define role adult_consumer "Adult consumer role" "Has all permissions of an adult consumer"
Defined new role: 'adult_consumer: Adult consumer role'.
define role child_consumer "Child consumer role" "Has all permissions of an child consumer"
Defined new role: 'child_consumer: Child consumer role'.
define role guest "Guest role" "Has all permissions of a guest"
Defined new role: 'guest: Guest role'.
define role admin "Admin role" "Has all permissions of an administrator"
Defined new role: 'admin: Admin role'.

define role store_123_guest "Store 123 Guest" "Has all permissions of a guest in Store 123" store_123
Defined new role: 'store_123_guest: Store 123 Guest'.
define role store_123_adult "Store 123 Adult Consumer" "Has all permissions of an Adult consumer in Store 123" store_123
Defined new role: 'store_123_adult: Store 123 Adult Consumer'.

################################################################################
# add permission to role
# add entitlement_to_role <entitlement_id> <role_id>
################################################################################
add entitlement_to_role user_admin admin
Added entitlement user_admin to role admin
add entitlement_to_role control_robot admin
Added entitlement control_robot to role admin
add entitlement_to_role control_speaker admin
Added entitlement control_speaker to role admin
add entitlement_to_role basket_items admin
Added entitlement basket_items to role admin
add entitlement_to_role checkout admin
Added entitlement checkout to role admin
add entitlement_to_role control_turnstile admin
Added entitlement control_turnstile to role admin
add entitlement_to_role open_access admin
Added entitlement open_access to role admin


add entitlement_to_role checkout adult_consumer
Added entitlement checkout to role adult_consumer
add entitlement_to_role enter_store adult_consumer
Added entitlement enter_store to role adult_consumer
add entitlement_to_role control_robot adult_consumer
Added entitlement control_robot to role adult_consumer
add entitlement_to_role open_access adult_consumer
Added entitlement open_access to role adult_consumer
add entitlement_to_role basket_items adult_consumer
Added entitlement basket_items to role adult_consumer

add entitlement_to_role enter_store child_consumer
Added entitlement enter_store to role child_consumer
add entitlement_to_role checkout child_consumer
Added entitlement checkout to role child_consumer
add entitlement_to_role open_access child_consumer
Added entitlement open_access to role child_consumer
add entitlement_to_role basket_items adult_consumer
Added entitlement basket_items to role adult_consumer

add entitlement_to_role enter_store guest
Added entitlement enter_store to role guest
add entitlement_to_role open_access guest
Added entitlement open_access to role guest


add entitlement_to_role adult_consumer store_123_adult
Added entitlement adult_consumer to role store_123_adult

################################################################################
# add entitlement to user
# add entitlement_to_user <user_id> <entitlement_id>
################################################################################
add entitlement_to_user root open_access
Added entitlement open_access to user root
add entitlement_to_user root admin
Added entitlement admin to user root


add entitlement_to_user cust_1 admin
Added entitlement admin to user cust_1
add entitlement_to_user cust_1 admin
Added entitlement admin to user cust_1
add entitlement_to_user cust_1 adult_consumer
Added entitlement adult_consumer to user cust_1

add entitlement_to_user cust_2 adult_consumer
Added entitlement adult_consumer to user cust_2

add entitlement_to_user cust_3 child_consumer
Added entitlement child_consumer to user cust_3

add entitlement_to_user cust_4 open_access
Added entitlement open_access to user cust_4

add entitlement_to_user cust_5 adult_consumer
Added entitlement adult_consumer to user cust_5


################################################################################
# Run InventoryVisitor
################################################################################
get auth inventory
========================
| Auth Service Inventory
========================
------------------------
Resources
------------------------
Resource: store_123
Resource: store_456
------------------------
Users
------------------------
cust_2: BILL ROSE
Face: --face:BILL ROSE--
Voice: --voice:BILL ROSE--
Password: null
	Entitlements:
		adult_consumer: Adult consumer role
			checkout: Checkout of store
			enter_store: Enter store
			control_robot: Control robot
			open_access: Open access
			basket_items: Basket items
	AuthToken:
		null
cust_3: MARY KELVIN
Face: --face:MARY KELVIN--
Voice: --voice:MARY KELVIN--
Password: null
	Entitlements:
		child_consumer: Child consumer role
			enter_store: Enter store
			checkout: Checkout of store
			open_access: Open access
	AuthToken:
		null
cust_1: JASON WALLACE
Face: --face:JASON WALLACE--
Voice: --voice:JASON WALLACE--
Password: uU0nuZNNPgilLlLX2n2r+sSE7+N6U4DukIj3rOLvzek=
	Entitlements:
		admin: Admin role
			user_admin: User administrator
			control_robot: Control robot
			control_speaker: Control speaker
			basket_items: Basket items
			checkout: Checkout of store
			control_turnstile: Control turnstile
			open_access: Open access
		adult_consumer: Adult consumer role
			checkout: Checkout of store
			enter_store: Enter store
			control_robot: Control robot
			open_access: Open access
			basket_items: Basket items
	AuthToken:
		null
root: root
Face: null
Voice: null
Password: SBNJTRN+FjG7owHVrKtue7eqdM4RhdRWVl71HXN2d7I=
	Entitlements:
		user_admin: User administrator
		open_access: Open access
		admin: Admin role
			user_admin: User administrator
			control_robot: Control robot
			control_speaker: Control speaker
			basket_items: Basket items
			checkout: Checkout of store
			control_turnstile: Control turnstile
			open_access: Open access
	AuthToken:
		token1
cust_6: MARIA WILIAMSON
Face: --face:MARIA WILIAMSON--
Voice: --voice:MARIA WILIAMSON--
Password: null
	Entitlements:
	AuthToken:
		null
cust_7: SALINA GOMEZ
Face: --face:SALINA GOMEZ--
Voice: --voice:SALINA GOMEZ--
Password: null
	Entitlements:
	AuthToken:
		null
cust_4: SILVER HAWK
Face: --face:SILVER HAWK--
Voice: --voice:SILVER HAWK--
Password: null
	Entitlements:
		open_access: Open access
	AuthToken:
		null
cust_5: MEGON FOX
Face: --face:MEGON FOX--
Voice: --voice:MEGON FOX--
Password: null
	Entitlements:
		adult_consumer: Adult consumer role
			checkout: Checkout of store
			enter_store: Enter store
			control_robot: Control robot
			open_access: Open access
			basket_items: Basket items
	AuthToken:
		null
------------------------
Roles
------------------------
adult_consumer: Adult consumer role
	checkout: Checkout of store
	enter_store: Enter store
	control_robot: Control robot
	open_access: Open access
	basket_items: Basket items
store_123_adult: Store 123 Adult Consumer
	adult_consumer: Adult consumer role
		checkout: Checkout of store
		enter_store: Enter store
		control_robot: Control robot
		open_access: Open access
		basket_items: Basket items
admin: Admin role
	user_admin: User administrator
	control_robot: Control robot
	control_speaker: Control speaker
	basket_items: Basket items
	checkout: Checkout of store
	control_turnstile: Control turnstile
	open_access: Open access
guest: Guest role
	enter_store: Enter store
	open_access: Open access
store_123_guest: Store 123 Guest
child_consumer: Child consumer role
	enter_store: Enter store
	checkout: Checkout of store
	open_access: Open access
------------------------
Permissions
------------------------
basket_items: Basket items
user_admin: User administrator
enter_store: Enter store
control_turnstile: Control turnstile
control_robot: Control robot
open_access: Open access
control_speaker: Control speaker
checkout: Checkout of store

######################################################################################
# Ledger configuration
#########################################################################################

# create-account <account-id>
create-account jason
Created account 'jason'
create-account bill
Created account 'bill'
create-account mary
Created account 'mary'
create-account silver
Created account 'silver'
create-account megon
Created account 'megon'
create-account maria
Created account 'maria'
create-account salina
Created account 'salina'

# process-transaction <transaction-id> amount <amount> fee <fee> payload <payload> payer <account-address> receiver <account-address>
process-transaction 1 amount 20 fee 10 payload "fund account" payer master receiver jason
Processed transaction #1
process-transaction 2 amount 200 fee 10 payload "fund account" payer master receiver bill
Processed transaction #2
process-transaction 3 amount 300 fee 10 payload "fund account" payer master receiver mary
Processed transaction #3
process-transaction 4 amount 400 fee 10 payload "fund account" payer master receiver silver
Processed transaction #4
process-transaction 5 amount 500 fee 10 payload "fund account" payer master receiver megon
Processed transaction #5
process-transaction 6 amount 600 fee 10 payload "fund account" payer master receiver maria
Processed transaction #6
process-transaction 7 amount 700 fee 10 payload "fund account" payer master receiver salina
Processed transaction #7

# validate the state of the blockchain
Validate
Blockchain successfully validated.
################################################################################
# Controller commands - written by Matthew Thomas for Assignment 3
# Modified for Assignment 4 to include face/voice prints to authenticate
# Customer actions
################################################################################

################################################################################
# Enter store
# create event <turnstile> event "customer <customer> <credential> waiting to enter at the turnstile <turnstile>"
################################################################################

# Welcome JASON WALLACE to the store
create event turn_a1 event "customer cust_1 '--face:JASON WALLACE--' waiting to enter"
Device 'turn_a1' emitted event: customer cust_1 '--face:JASON WALLACE--' waiting to enter
Appliance 'turn_a1' received command 'open'.
Appliance 'turn_a1' received command 'Hello, JASON WALLACE, welcome to store_123'.

# Welcome BILL ROSE to the store
create event turn_a2 event "customer cust_2 '--face:BILL ROSE--' waiting to enter"
Device 'turn_a2' emitted event: customer cust_2 '--face:BILL ROSE--' waiting to enter
Appliance 'turn_a2' received command 'open'.
Appliance 'turn_a2' received command 'Hello, BILL ROSE, welcome to store_123'.

# Welcome MARY KELVIN to the store
#create event turn_a3 event "customer cust_3 '--face:MARY KELVIN--'  waiting to enter"

# Welcome MEGON FOX to the store
create event turn_a2 event "customer cust_5 '--face:MEGON FOX--' waiting to enter"
Device 'turn_a2' emitted event: customer cust_5 '--face:MEGON FOX--' waiting to enter
Appliance 'turn_a2' received command 'open'.
Appliance 'turn_a2' received command 'Hello, MEGON FOX, welcome to store_123'.

# SILVER HAWK does not have any permissions, including 'open_access', so cannot enter
create event turn_a1 event "customer cust_4 '--face:SILVER HAWK--' waiting to enter"
Device 'turn_a1' emitted event: customer cust_4 '--face:SILVER HAWK--' waiting to enter
get basket: does not have permission 'Does not have 'checkout' permission.'

################################################################################
# Customer seen
# create event <camera> event "customer <customer> enters <aisle>"
################################################################################

create event cam_A1 event "customer cust_1 '--face:JASON WALLACE--' enters aisle_A1"
Device 'cam_A1' emitted event: customer cust_1 '--face:JASON WALLACE--' enters aisle_A1
Customer cust_1's location updated. Currently located @ RelianceMart, aisle_A1.

create event cam_A1 event "customer cust_2 '--face:BILL ROSE--' enters aisle_A1"
Device 'cam_A1' emitted event: customer cust_2 '--face:BILL ROSE--' enters aisle_A1
Customer cust_2's location updated. Currently located @ RelianceMart, aisle_A1.

create event cam_B2 event "customer cust_3 '--face:MARY KELVIN--' enters aisle_B2"
Device 'cam_B2' emitted event: customer cust_3 '--face:MARY KELVIN--' enters aisle_B2
Customer cust_3's location updated. Currently located @ RelianceMart, aisle_B2.
create event cam_B2 event "customer cust_3 '--face:MARY KELVIN--' enters aisle_B3"
Device 'cam_B2' emitted event: customer cust_3 '--face:MARY KELVIN--' enters aisle_B3
Customer cust_3's location updated. Currently located @ RelianceMart, aisle_B3.
create event cam_B2 event "customer cust_3 '--face:MARY KELVIN--' enters aisle_A1"
Device 'cam_B2' emitted event: customer cust_3 '--face:MARY KELVIN--' enters aisle_A1
Customer cust_3's location updated. Currently located @ RelianceMart, aisle_A1.

create event cam_A1 event "customer cust_5 '--face:MEGON FOX--' enters aisle_B1"
Device 'cam_A1' emitted event: customer cust_5 '--face:MEGON FOX--' enters aisle_B1
Customer cust_5's location updated. Currently located @ RelianceMart, aisle_B1.


# All these customers do not have any permissions, including "open_access", so cannot enter
# the store, nor have their location update
create event cam_A1 event "customer cust_4 '--face:SILVER HAWK--' enters aisle_B1"
Device 'cam_A1' emitted event: customer cust_4 '--face:SILVER HAWK--' enters aisle_B1
Customer cust_4's location updated. Currently located @ RelianceMart, aisle_B1.

create event cam_A1 event "customer cust_6 '--face:MARIA WILIAMSON--' enters aisle_B2"
Device 'cam_A1' emitted event: customer cust_6 '--face:MARIA WILIAMSON--' enters aisle_B2
customer cust_6 '--face:MARIA WILIAMSON--' enters aisle_B2: Does not have 'open_access' permission.

create event cam_A2 event "customer cust_7 '--face:SALINA GOMEZ--' enters aisle_A3"
Device 'cam_A2' emitted event: customer cust_7 '--face:SALINA GOMEZ--' enters aisle_A3
customer cust_7 '--face:SALINA GOMEZ--' enters aisle_A3: Does not have 'open_access' permission.


# RelianceMart, aisle_A1
show customer cust_1
Customer 'cust_1': JASON WALLACE
	Currently located @ RelianceMart, aisle_A1
	Last seen: Wed Nov 20 17:34:45 EST 2019
	Type: GUEST
	Email: jason.wallace@ymail.com
	Account address: jason

# RelianceMart, aisle_A1 (last seen location)
show customer cust_3
Customer 'cust_3': MARY KELVIN
	Currently located @ RelianceMart, aisle_A1
	Last seen: Wed Nov 20 17:34:45 EST 2019
	Type: REGISTERED
	Email: mary.kevin@yahoomail.com
	Account address: mary

# Not in store
show customer cust_6
Customer 'cust_6': MARIA WILIAMSON
	Currently located @ N/a
	Last seen: N/a
	Type: REGISTERED
	Email: maria4567@ymail.com
	Account address: maria

########################################################################################
# Emergency Command
# create event <camera> event "emergency <emergency> in <aisle>"
#
# <emergency> can have one of the values: (fire | flood | earthquake | armed_intruder)
########################################################################################

# For all emergencies - open 3 turnstiles, announce on 2 speakers, 1 robot address, 4 robots assist
# Demonstrates that the "root" (or admin) user, logged in via the Store Controller Service can
# control the store Appliances

create event cam_A1 event "emergency fire in aisle_A1"
Device 'cam_A1' emitted event: emergency fire in aisle_A1
Appliance 'turn_a2' received command 'open'.
Appliance 'turn_a1' received command 'open'.
Appliance 'turn_a3' received command 'open'.
Appliance 'spk_2' received command 'There is a FIRE in aisle aisle_A1, please leave store_123 immediately'.
Appliance 'spk_1' received command 'There is a FIRE in aisle aisle_A1, please leave store_123 immediately'.
Appliance 'rob_4' received command 'Address FIRE in aisle aisle_A1'.
Appliance 'rob_5' received command 'Assist customers leaving the store'.
Appliance 'rob_2' received command 'Assist customers leaving the store'.
Appliance 'rob_3' received command 'Assist customers leaving the store'.
Appliance 'rob_1' received command 'Assist customers leaving the store'.

create event cam_B2 event "emergency flood in aisle_A1"
Device 'cam_B2' emitted event: emergency flood in aisle_A1
Appliance 'turn_a2' received command 'open'.
Appliance 'turn_a1' received command 'open'.
Appliance 'turn_a3' received command 'open'.
Appliance 'spk_2' received command 'There is a FLOOD in aisle aisle_A1, please leave store_123 immediately'.
Appliance 'spk_1' received command 'There is a FLOOD in aisle aisle_A1, please leave store_123 immediately'.
Appliance 'rob_4' received command 'Address FLOOD in aisle aisle_A1'.
Appliance 'rob_5' received command 'Assist customers leaving the store'.
Appliance 'rob_2' received command 'Assist customers leaving the store'.
Appliance 'rob_3' received command 'Assist customers leaving the store'.
Appliance 'rob_1' received command 'Assist customers leaving the store'.

create event cam_B2 event "emergency armed_intruder in aisle_A1"
Device 'cam_B2' emitted event: emergency armed_intruder in aisle_A1
Appliance 'turn_a2' received command 'open'.
Appliance 'turn_a1' received command 'open'.
Appliance 'turn_a3' received command 'open'.
Appliance 'spk_2' received command 'There is a ARMED_INTRUDER in aisle aisle_A1, please leave store_123 immediately'.
Appliance 'spk_1' received command 'There is a ARMED_INTRUDER in aisle aisle_A1, please leave store_123 immediately'.
Appliance 'rob_4' received command 'Address ARMED_INTRUDER in aisle aisle_A1'.
Appliance 'rob_5' received command 'Assist customers leaving the store'.
Appliance 'rob_2' received command 'Assist customers leaving the store'.
Appliance 'rob_3' received command 'Assist customers leaving the store'.
Appliance 'rob_1' received command 'Assist customers leaving the store'.

################################################################################
# Basket Event
# create event <camera> event "customer <customer> (adds|removes) <product> from <aisle:shelf>"
################################################################################

# Add 1 bournvita to customer's basket
create event cam_A1 event "customer cust_1 '--face:JASON WALLACE--' adds prod10 from aisle_A1:shelf_q1"
Device 'cam_A1' emitted event: customer cust_1 '--face:JASON WALLACE--' adds prod10 from aisle_A1:shelf_q1
Added 1 of bournvita to the basket. Current count is 1.
Inventory 'inv_u21' updated count of 'prod10' from 1000 to 999.

# Removes 1 bournvita from customer's basket
create event cam_A1 event "customer cust_1 '--face:JASON WALLACE--' removes prod10 from aisle_A1:shelf_q1"
Device 'cam_A1' emitted event: customer cust_1 '--face:JASON WALLACE--' removes prod10 from aisle_A1:shelf_q1
Removed 1 bournvita from the basket.
No more of this item remains in the basket.
Inventory 'inv_u21' updated count of 'prod10' from 999 to 1000.

################################################################################
# Basket Event (with Restock)
# create event <camera> event "customer <customer> (adds|removes) <product> from <aisle:shelf>"
################################################################################

# Add 1 coffee to customer's basket. Inventory 100 -> 99 (capacity of 300).
# Generate restock command to bring Inventory count from 99 -> 300.
create event cam_A2 event "customer cust_5 '--face:MEGON FOX--' adds prod12 from aisle_A2:shelf_q3"
Device 'cam_A2' emitted event: customer cust_5 '--face:MEGON FOX--' adds prod12 from aisle_A2:shelf_q3
Added 1 of coffee to the basket. Current count is 1.
Inventory 'inv_u26' updated count of 'prod12' from 100 to 99.
Device 'cam_A2' emitted event: product prod12 inventory store_123:aisle_A2:shelf_q3:inv_u26 restock
Appliance 'rob_4' received command 'Restock 201 of coffee in inventory inv_u26'.
Inventory 'inv_u26' updated count of 'prod12' from 99 to 300.
Inventory restocked. Now has 300 on shelf out of capacity of 300.


# MARY KELVIN does not have "basket_items" permissions, so cannot add product to basket
create event cam_A1 event "customer cust_3 '--face:MARY KELVIN--' adds prod13 from aisle_B2:shelf_q2"
Device 'cam_A1' emitted event: customer cust_3 '--face:MARY KELVIN--' adds prod13 from aisle_B2:shelf_q2
add item to basket: does not have permission 'Does not have 'basket_items' permission.'

################################################################################
# Fetch product
# create event <camera> event "customer <customer> says please get me <number> of <product> from <store:aisle:shelf:inventory>"
################################################################################

# Reduce inventory from 50 -> 45. Basket count 0 -> 5. Generate restock command
# to bring Inventory from 45 -> 200.
create event mic_A1 event "customer cust_1 '--voice:JASON WALLACE--' says please get me 5 of prod12 from store_123:aisle_A2:shelf_q3:inv_u27"
Device 'mic_A1' emitted event: customer cust_1 '--voice:JASON WALLACE--' says please get me 5 of prod12 from store_123:aisle_A2:shelf_q3:inv_u27
Appliance 'rob_4' received command 'Fetch 5 of store_123:aisle_A2:shelf_q3:inv_u27 from coffee and bring to customer.'.
Inventory 'inv_u27' updated count of 'prod12' from 50 to 45.
Added 5 of coffee to the basket. Current count is 5.
Device 'mic_A1' emitted event: product prod12 inventory store_123:aisle_A2:shelf_q3:inv_u27 restock
Appliance 'rob_4' received command 'Restock 155 of coffee in inventory inv_u27'.
Inventory 'inv_u27' updated count of 'prod12' from 45 to 200.
Inventory restocked. Now has 200 on shelf out of capacity of 200.

# Reduce inventory from 100 -> 90. Basket count 0 -> 10. Generate restock command
# to bring Inventory from 90 -> 200.
create event mic_A1 event "customer cust_2 '--voice:BILL ROSE--' says please get me 10 of prod11 from store_123:aisle_A2:shelf_q2:inv_u25"
Device 'mic_A1' emitted event: customer cust_2 '--voice:BILL ROSE--' says please get me 10 of prod11 from store_123:aisle_A2:shelf_q2:inv_u25
Appliance 'rob_4' received command 'Fetch 10 of store_123:aisle_A2:shelf_q2:inv_u25 from tea and bring to customer.'.
Inventory 'inv_u25' updated count of 'prod14' from 100 to 90.
Added 10 of tea to the basket. Current count is 10.
Device 'mic_A1' emitted event: product prod11 inventory store_123:aisle_A2:shelf_q2:inv_u25 restock
Appliance 'rob_4' received command 'Restock 110 of tea in inventory inv_u25'.
Inventory 'inv_u25' updated count of 'prod14' from 90 to 200.
Inventory restocked. Now has 200 on shelf out of capacity of 200.

# MARY KELVIN does not have "control_robot" permission so cannot request a Product to be fetched
create event mic_A1 event "customer cust_3 '--voice:MARY KELVIN--' says please get me 4 of prod13 from store_123:aisle_B2:shelf_q2:inv_u24"
Device 'mic_A1' emitted event: customer cust_3 '--voice:MARY KELVIN--' says please get me 4 of prod13 from store_123:aisle_B2:shelf_q2:inv_u24
receive command: does not have permission 'Does not have 'control_robot' permission.'


################################################################################
# Check account balance
# create event <microphone> event "customer <customer> says 'What is the total basket value?'"
################################################################################

# Customer 1 (Jason) has 5 'coffee' (from Fetch Product).
# Unit price = 3 * 5 = basket total of 15
# Total (15 + 10 min fee) is more than Jason's account balance of 20
create event mic_A1 event "customer cust_1 '--voice:JASON WALLACE--' says 'What is the total basket value?'"
Device 'mic_A1' emitted event: customer cust_1 '--voice:JASON WALLACE--' says 'What is the total basket value?'
JASON WALLACE basket total is 15
Appliance 'spk_2' received command 'Total value of basket items (and 10 unit fee) is 25, which is more than your account balance of 20'.

# Customer 5 has 1 'coffee' (from Restock Command).
# Unit price = 3 * 1 = basket total of 3
# Total (3 + 10 min fee) is less than Megon's account balance of 500
create event mic_A1 event "customer cust_5 '--voice:MEGON FOX--' says 'What is the total basket value?'"
Device 'mic_A1' emitted event: customer cust_5 '--voice:MEGON FOX--' says 'What is the total basket value?'
MEGON FOX basket total is 3
Appliance 'spk_2' received command 'Total value of basket items (and 10 unit fee) is 13, which is less than your account balance of 500'.

# Customer 2 has 10 'tea' (from Fetch Product).
# Unit price = 1 * 10 = basket total of 10
# Total (10 + 10 min fee) is less than Bill's account balance of 200
create event mic_A1 event "customer cust_2 '--voice:BILL ROSE--' says 'What is the total basket value?'"
Device 'mic_A1' emitted event: customer cust_2 '--voice:BILL ROSE--' says 'What is the total basket value?'
BILL ROSE basket total is 10
Appliance 'spk_2' received command 'Total value of basket items (and 10 unit fee) is 20, which is less than your account balance of 200'.

################################################################################
# Checkout
# create event <turnstile> event "customer <customer> approaches turnstile"
################################################################################

# Customer 5 (Megon) basket total is 3 + 10 min fee (against balance of 500
# Transaction successful, assigned ID of 8 (there are 7 initial transactions)
create event turn_a3 event "customer cust_5 '--face:MEGON FOX--' approaches turnstile"
Device 'turn_a3' emitted event: customer cust_5 '--face:MEGON FOX--' approaches turnstile
MEGON FOX basket total is 3
Processed transaction #8
Appliance 'turn_a3' received command 'Open'.
Appliance 'spk_2' received command 'Goodbye MEGON FOX, thanks for shopping!'.

# Fails to checkout because SILVER HAWK does not have "checkout" Permission
create event turn_a3 event "customer cust_4 '--face:SILVER HAWK--' approaches turnstile"
Device 'turn_a3' emitted event: customer cust_4 '--face:SILVER HAWK--' approaches turnstile
get basket: does not have permission 'Does not have 'checkout' permission.'

################################################################################
# Assist customer to car
# checkout: total weight of products in basket exceeds 10lbs
################################################################################

# Bill's basket total is 10 + 10 min fee (against balance of 200)
# Transaction successful, with ID of 8 (7 initial transactions above)
# Triggers assistance command -- basket has 10 items of size 1.5 lbs > 10 lbs max
create event turn_a2 event "customer cust_2 '--voice:BILL ROSE--' approaches turnstile"
Device 'turn_a2' emitted event: customer cust_2 '--voice:BILL ROSE--' approaches turnstile
BILL ROSE basket total is 10
Processed transaction #9
Device 'turn_a2' emitted event: customer cust_2 assistance
login: does not have permission 'login credential is not recognized for cust_2'
Appliance 'turn_a2' received command 'Open'.
Appliance 'spk_2' received command 'Goodbye BILL ROSE, thanks for shopping!'.

################################################################################
# logout
# logout user <user_id>
################################################################################
logout user root
Logging out token1
Logout successful.
